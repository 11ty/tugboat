<style webc:scoped>
:host select {
	padding: .25em;
	border-width: 2px;
	border-radius: .25em;
	border-color: rgba(0,0,0,.3);
}
:host select[disabled] {
	cursor: not-allowed;
}
:host-context(.theme-dark) select {
	border-color: rgba(255,255,255,.3);
}
</style>

<form>
	<label>
		<select disabled>
			<option value="">System</option>
			<option value="dark">Dark Theme</option>
			<option value="light" selected>Light Theme</option>
		</select>
	</label>
</form>

<script webc:bucket="head">
(function() {
	let root = document.documentElement;
	let query = window.matchMedia("(prefers-color-scheme: dark)");
	query.addEventListener("change", function (e) {
		if(e.matches) {
			root.classList.add("theme-dark");
		} else {
			root.classList.remove("theme-dark");
		}
	});

	let savedTheme = sessionStorage.getItem("theme");
	if(savedTheme || query?.matches) {
		root.classList.add(`theme-${savedTheme || 'dark'}`);
	}
})();
</script>

<script>
let selectCache = new Set();

class ColorSchemer extends HTMLElement {
	disconnectedCallback() {
		selectCache.delete(this.select);
	}

	connectedCallback() {
		this.select = this.querySelector("select");
		if(this.select) {
			selectCache.add(this.select);

			this.select.removeAttribute("disabled");
			this.select.value = sessionStorage.getItem("theme") || "";

			this.select.addEventListener("input", function() {
				let root = document.documentElement;
				root.classList.remove("theme-dark", "theme-light");

				let theme = this.value;
				if(theme) {
					root.classList.add(`theme-${theme}`);
					sessionStorage.setItem("theme", theme);
				} else {
					let systemTheme = (window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light");

					root.classList.add(`theme-${systemTheme}`);
					sessionStorage.removeItem("theme");
				}

				// Sync
				for(let select of selectCache) {
					if(select && select !== this) {
						select.value = theme;
					}
				}
			})
		}
	}
}

if(("customElements" in window)) {
	window.customElements.define("color-schemer", ColorSchemer);
}
</script>